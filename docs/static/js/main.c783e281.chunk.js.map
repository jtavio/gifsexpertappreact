{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifts.js","componentes/GifsGridItems.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifsGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAEI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAKEA,EAAIC,OALN,uBAKZC,EALY,EAKZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAeZM,GAfY,4CAAH,sDCeLO,EAdO,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC2BDO,EA7BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEd,ECLwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OApBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIxB,CAACpB,IAWEqB,EDpB2BK,CAAa1B,GAAlCa,EAAb,EAAQN,KAAca,EAAtB,EAAsBA,QAGtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAACC,GACZ,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aEqBtBgB,EAnCM,WAEjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACK2C,EAAWnB,KAAI,SAAAT,GACR,OAAO,cAAC,EAAD,CACNA,SAAUA,GACLA,Y,MCpB9B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.c783e281.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories(cat => [inputValue, ...cat])\r\n            setInputValue('')\r\n        }\r\n    }   \r\n    return (\r\n    \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kvwhbaBB3GogVnQHSjTRWRH08c5iNMwr`;\r\n\r\n    const res = await fetch(url);\r\n\r\n    const {data} = await res.json();\r\n\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifsGridItems = ({id, title, url}) => {\r\n\r\n    return (    \r\n        <div className=\"card animate__animated animate__fadeInTopLeft\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// GifsGridItems.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifsGridItems\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import PropTypes from 'prop-types';\r\nimport GifsGridItems from './GifsGridItems';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data:images,  loading } = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                \r\n                    {\r\n                        images.map((img) => {\r\n                        return <GifsGridItems \r\n                            key={img.id}\r\n                            {...img}\r\n                            />\r\n                        })\r\n                    }\r\n                \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\n// GifGrid.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(()=> {\r\n        getGifs(category)\r\n            .then(imgs => { \r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n                    \r\n            })\r\n     }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setState(\r\n    //         {\r\n    //             data:[1,2,3,4,5,6],\r\n    //             loading:false\r\n    //         }\r\n    //     )\r\n    // }, 300);\r\n\r\n    return state; //{data:[], loading:true}\r\n}","import React, {useState} from 'react'\r\n//import PropTypes from 'prop-types'\r\nimport AddCategory from './componentes/AddCategory';\r\nimport GifGrid from './componentes/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories(\r\n    //     //   [  'pokemon', ...categories,]\r\n    //     // )\r\n    //     setCategories(cat => [...categories, 'pokemon']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n           \r\n            <ol>\r\n                {categories.map(category => {\r\n                        return <GifGrid\r\n                         category={category}\r\n                         key={category}\r\n                         />;\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}